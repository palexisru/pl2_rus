predicate.pl2
описание синтаксиса грамматики компилятора компиляторов
раздел описания одного правила Predicate

mode source="bnf" name="bnf_predicate_example"
    context grammar.bnf2.predicate \пространство имен компилятора компиляторов\
    {@
       unit Body \ описание тела предикатов \
       {*  
            predicate_body ::= predicate_body_fine | predicate_body_error
            {&
                grammar.bnf.parser.predicate.body.no_errors( $0 );
            &}

            predicate_body_fine ::= predicate_body_exists | predicate_body_empty
            {&
                grammar.bnf.parser.predicate.body.no_errors( $0 );
            &}

            predicate_body_error ::= ERROR
            {&
                grammar.bnf.parser.predicate.body.no_errors( $0 );
            &}

            predicate_body_exists ::= predicate_body_starts predicate_body_tail
            {&
                grammar.bnf.parser.predicate.body.no_errors( $0 );
            &}

            predicate_body_empty ::= ";"
            {&
                grammar.bnf.parser.predicate.body.no_errors( $0 );
            &}

            predicate_body_starts ::= "{&";

            predicate_body_tail ::=  predicate_body_inner predicate_body_ends_bracket
            {&
                grammar.bnf.parser.predicate.body.no_errors( $0 );
            &}

            predicate_body_starts ::= "{&";

            predicate_body_ends_bracket ::= "&}";

            predicate_body_inner ::= rule_event_start right_brecket
            {&
                grammar.bnf.parser.predicate.body.no_errors( $0 );
            &}

            rule_event_start ::= left_brecket events.rule_event_body
            {&
            &} 

            predicate_rule ::= predicate_start predicate_pattern
            {&
            &}

            predicate_start ::= identifier predicate_separator
            {&
            &}

            predicate_separator ::= "::="
            {&
            &}
             
            predicate_pattern ::= rules.rule_definition
           {&
           &}
       *}
   @}
/mode
