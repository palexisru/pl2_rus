описание синтаксиса грамматики компилятора компиляторов
раздел описания контекстов

mode source="bnf" name="bnf_context_example"
    context grammar.bnf2 \ пространство имен компилятора компиляторов \
    {@
        unit Context \ объединение для синтаксиса компиляторов \
        (*  
            rule list \ последовательность контекстов в одном блоке кода \
               ::= list_fine ^ list_bad
            {&
                parsers.contexts.Contexts.end();
            &}

            rule list_fine \ правильная последовательность контекстов в одном блоке кода \
               ::= context_area RECURSIVELY
            {&
                parsers.contexts.Contexts.add( context_area );
            &}

            rule list_bad \ последовательность с ошибкой контекстов в одном блоке кода \               
            {&
                parsers.contexts.Contexts.add( context_area );
            &}

            rule context_area \ закрытый контекст с обработанными ошибками \
               ::= context_area_fine ^ context_area_error
            {&
            &};

            rule context_area_fine \ закрытый контекст без ошибок \
               ::= context_area_start & context_area_closed
            {&
                parsers.section.Sections.end( context_area_fine );
            &};

            rule context_area_error \ закрытый контекст с ошибкой \
                ::= context_area_error_end ^ context_area_error_not_end
            {&
                parsers.section.Sections.end( context_area_error);
            &};

            rule context_area_error_end \ преждевременное окончание секции \
                ::= EOS;
            {&
                parsers.section.Sections.end( context_area_error_end );
            &};

            rule context_area_closed \ контекст с правильными закрывающими скобками \
               ::= context_body & context_area_closure
            {&
                parsers.section.sections.end( context_area_closed, context_body);
            &}

            rule context_area_closure \ закрывающие скобки контекста \
               ::= grammar.Lexical.end_of_block & "@}"
            {&
                parsers.section.sections.end( context_area_closed, context_body);
            &}            

            rule context_area_closure \ закрывающие скобки контекста \
               ::= context_area_closure_fine ^ context_area_closure_wrong 
            {&
                parsers.section.sections.end( context_area_closed, context_body);
            &}            

            rule context_area_closure_fine \ закрывающие скобки контекста \
               ::= grammar.Lexical.end_of_block & "@}"
            {&
                parsers.section.sections.end( context_area_closed, context_body);
            &}            

            rule context_area_closure_wrong \ закрывающие скобки контекста \
               ::= "@}"
            {&
                parsers.section.sections.end( context_area_closed, context_body);
            &}            

            rule context_body \ тело контекста \
               ::=  grammar.bnf2.Unit.list
            {&
                parsers.section.sections.end( context_body );
            &}
        *}
    @}
/mode
